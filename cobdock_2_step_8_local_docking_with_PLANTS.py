import glob
import math
import shutil
import numpy as np
from pymol.cgo import *
from pathlib import Path
from Bio.PDB import PDBParser
from scipy.optimize import minimize
from pymol import cmd
import pandas as pd
import sys
import argparse
import timeit
import statistics
import textwrap
import datetime
import os.path
import time
import csv
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

# inputs should be .mol2
def execute_plants(protein, ligand, x, y, z, size, output_file):
    protein_without_ex=str(protein).split("/")[-1].split(".")[0]
    ligand_without_ex=str(ligand).split("/")[-1].split(".")[0]
    output_file_path=f"{output_file}/{protein_without_ex}"

    #print("output_file_path")
    #print(output_file_path)

    # Check if the directory exists
    if not os.path.exists(output_file_path):
        # Create the directory
        os.makedirs(output_file_path)
        print(f"Directory created: {output_file_path}")
    else:
        print(f"Directory already exists: {output_file_path}")

    os.system("> plantsconfig")
    plants_input = open("plantsconfig", "w")
    plants_input.writelines("# scoring function and search settings\n"
                            "scoring_function chemplp\n"
                            #"#outside_binding_site_penalty 50\n"
                            "search_speed speed1\n\n\n"
                            "# input\n")
    # proteinleri mol2 yapman lazÄ±m
    plants_input.writelines("protein_file %s\n" % protein)
    plants_input.writelines("ligand_file %s\n\n" % ligand)
    plants_input.writelines("# output\n"
                            "# output_dir \n\n")

    # Output_dir has been closed, since it broke the code
    plants_input.writelines("# write single mol2 files (e.g. for RMSD calculation)\n"
                            "write_multi_mol2 0\n\n"
                            "# binding site definition\n"
                            "bindingsite_center {0} {1} {2}\n".format(x, y, z))
    plants_input.writelines("bindingsite_radius %s\n\n\n" % size)
    plants_input.writelines("#cluster algorithm\n")
    #plants_input.writelines("cluster_structures 9\n"
    #                        "cluster_rmsd 3")
    plants_input.close()

    os.system("./PLANTS/plants --mode screen plantsconfig")
    os.rename("optimizer.log", f"{protein_without_ex}_{ligand_without_ex}_optimizer.log")
    os.system(f"mv {protein_without_ex}_{ligand_without_ex}_optimizer.log {output_file_path}")
    os.rename("protein.log", f"{protein_without_ex}_protein.log")
    os.system(f"mv {protein_without_ex}_protein.log {output_file_path}")
    os.system(f"mv protein_bindingsite_fixed.mol2 {output_file_path}")
    os.rename("score.log", f"{protein_without_ex}_score.log")
    os.system(f"mv {protein_without_ex}_score.log {output_file_path}")
    os.remove("skippedligands.csv")
    os.remove("bestranking.csv")
    os.remove("constraints.csv")
    os.remove("correspondingNames.csv")
    os.rename("features.csv", f"{protein_without_ex}_features.csv")
    os.system(f"mv {protein_without_ex}_features.csv {output_file_path}")
    os.rename("ligand.log", f"{ligand_without_ex}_ligand.log")
    os.system(f"mv {ligand_without_ex}_ligand.log {output_file_path}")
    os.remove("optimizer.csv")
    os.rename("ranking.csv", f"{protein_without_ex}_ranking.csv")
    os.system(f"mv {protein_without_ex}_ranking.csv {output_file_path}")
    os.remove(f"descent_{ligand_without_ex}_1.dat")
    b = 1
    if os.path.exists(f"{ligand_without_ex}.pdb_entry_00001_conf_0{b}.mol2"):
        print(f"{ligand_without_ex}.pdb_entry_00001_conf_0{b}.mol2 is found!! If loop")
        for cevir in range(9):
            os.rename(f"{ligand_without_ex}.pdb_entry_00001_conf_0{b}.mol2",
                      f"{protein_without_ex}_conf_0{b}.mol2")
            os.system(f"mv {protein_without_ex}_conf_0{b}.mol2 {output_file_path}")
            os.remove(f"{ligand_without_ex}.pdb_entry_00001_conf_0{b}_protein.mol2")
            b += 1
    else:
        ligand_files=glob.glob("*entry_00001_conf_0*")
        print(ligand_files)
        for ligand in ligand_files:
            if "protein" not in ligand:
                conf_number=ligand.split("_")[-1].split(".")[0]
                os.rename(ligand,
                          f"{protein_without_ex}_conf_0{conf_number}.mol2")
                os.system(f"mv {protein_without_ex}_conf_0{conf_number}.mol2 {output_file_path}")
            else:
                #os.system(f"mv {ligand} {output_file_path}")
                os.remove(ligand)

def prepare_inputs(input_file):
    if ".pdb" in str(input_file):
        without_ex=str(input_file).split(".")[0]
        os.system(f"obabel -ipdb {input_file} -omol2 -O {without_ex}.mol2")
    elif ".mol" in str(input_file):
        without_ex = str(input_file).split(".")[0]
        os.system(f"obabel -imol {input_file} -omol2 -O {without_ex}.mol2")
    elif ".mol2" in str(input_file):
        print("Input file is already in .mol2 format")

def prepare_inputs_by_pymol(imput_file):
    imput_file_without_ex=str(imput_file).split(".")[0]
    cmd.reinitialize()
    cmd.load(imput_file)
    cmd.save(f"{imput_file_without_ex}.mol2")
    cmd.remove("all")

def bulk_run(protein_list, input_path, coordinate_dictionary, size, label_dic):
    os.chdir(input_path)
    for protein in protein_list:
        print("target")
        print(f"{protein}.mol2")
        if not os.path.exists(f"{protein}_protonated_pH=7_4.mol2"):
            os.chdir(input_path)
            print("target has been prepared")
            #print(str(protein).split("/")[-1])
            if not os.path.exists(f"{protein}_protonated_pH=7_4.mol2"):
                shutil.copy(f"{protein}.pdb", f"{protein}_protonated_pH=7_4.pdb")
                prepare_inputs_by_pymol(f"{protein}_protonated_pH=7_4.pdb")
        ligand_name=f"{protein}_ligand_spored.mol2"
        # find ligand and if ligand is not in .mol2
        try:
            x,y,z=coordinate_dictionary.get(protein)
        except:
            try:
                x, y, z = coordinate_dictionary.get(protein.split("-")[0])
            except:
                print(f"{str(protein).upper()}_ligand_data.csv")
                x, y, z = coordinate_dictionary.get(f"{str(protein).upper()}_ligand_data.csv")
        os.chdir(current_dir)
        # execute local docking

        execute_plants(protein=f"{input_path}/{protein}_protonated_pH=7_4.mol2",
                       ligand=f"{input_path}/{ligand_name}",
                       x=x,
                       y=y,
                       z=z,
                       size=size,
                       output_file=f"/home/yavuz/yavuz_proje/cobdock_2/local_docking/poses/{label_dic}")

# example usage for ADS benchmark
def local_docking_ads():
    ads_test = ['1s19-A', '1hww-A', '1xoq-B', '1gpk-A', '1ke5-A', '1n46-A', '1l2s-B', '1k3u-A', '1jje-A', '1yv3-A',
                '1sg0-AB', '1kzk', '1yvf-A', '1vcj-A', '1unl-AD', '1hvy-D', '1owe-A', '1w1p-B', '1hnn-A', '1of6-A',
                '1x8x-A', '1w2g-B', '1z95-A', '1r58-A', '1s3v-A', '1sq5-A', '1v0p-A', '1hq2-A', '1t46-A', '1xm6-A',
                '1y6b-A', '1of1-B', '1oq5-A', '1mmv-B', '1v4s-A', '1n2j-A', '1oyt-HIL', '1n2v-A', '1q4g-B', '1xoz-A',
                '2br1-A', '1g9v-AB', '1uml-A', '1meh-A', '1tz8-AB', '1lpz-AB', '1q41-A', '1yqy-A', '1jla-A', '1pmn-A',
                '2bm2-B', '1ia1-B', '1ygc-HL', '1lrh-D', '1r1h-A', '1opk-A', '1u1c-F', '1sj0-A', '1t40-A', '1tt1-A',
                '2bsm-A', '1ywr-A', '1jd0-B', '1mzc-AB', '1p62-B', '1nav-A', '1u4d-A', '1ig3-AB', '1v48-A', '1t9b-A',
                '1tow-A', '1p2y-A', '1hwi-AB', '1j3j-A', '1l7f-A', '1hp0-A', '1r55-A', '1m2z-A', '1sqn-B', '1n1m-A',
                '1gkc-A', '1uou-A', '1q1g-F', '1r9o-A', '1gm8-AB'
                ]
    ads_cobdock = {'1tz8': (13.814, 61.435, 33.555), '1z95': (27.412, 2.466, 6.332), '1mmv': (11.1586, 4.9407, 55.7485),
                   '1vcj': (33.327, -7.72, 63.29), '1lpz': (8.994, 8.609, 25.364), '1sqn': (11.6418, 25.1938, 8.7089),
                   '1of6': (32.4957, -0.8095, 50.9567), '1m2z': (30.384, 7.278, 13.845),
                   '1t40': (19.8155, -6.4276, 22.717), '1q4g': (67.844, 22.645, 190.094),
                   '1nav': (46.487, 15.835, 18.718), '1v0p': (23.2915, 0.6416, 34.8782),
                   '1r58': (19.884, 29.987, 17.518), '1n2j': (37.882, 33.994, 45.717),
                   '1hvy': (66.2172, 41.8438, 26.0495), '1jd0': (-14.9394, -4.9452, 18.862),
                   '2br1': (14.163, -3.402, 11.747), '1ig3': (9.8133, 65.5429, 12.01),
                   '1s3v': (-6.7089, 33.2316, 5.8665), '1oq5': (16.9559, 4.5564, 12.5321),
                   '1l7f': (24.2958, 19.1208, 64.8242), '1p2y': (13.321, 10.453, 39.655),
                   '1xoz': (46.99, 36.424, 14.095), '1v48': (73.088, 48.023, 49.399),
                   '1yqy': (11.0902, 19.9745, 15.9122), '1hq2': (-7.42, 6.479, 18.147), '1hww': (31.202, 67.22, 7.238),
                   '1gm8': (13.4383, -3.6147, 1.3822), '1t9b': (-3.453, 48.088, 116.715),
                   '1yvf': (-3.1358, 49.6072, 46.7987), '1pmn': (20.9863, 16.1471, 30.1883),
                   '1hp0': (18.2953, 24.4404, 14.9806), '1yv3': (19.9042, 45.8285, 53.6307),
                   '1gkc': (62.912, 29.301, 116.375), '1tt1': (1.237, 0.3443, 27.7982),
                   '1n2v': (14.481, 16.975, 18.012), '1owe': (23.2193, 12.1311, 34.2163),
                   '1kzk': (19.8917, -2.2937, 16.9458), '1uou': (-12.9964, -4.1378, 23.0831),
                   '1q1g': (30.232, 26.852, 64.224), '1oyt': (16.2291, -11.5937, 18.901),
                   '1l2s': (77.1359, 6.1271, 23.8463), '1w1p': (48.3648, 76.7112, 51.2398),
                   '1ywr': (1.3873, -2.6278, 19.9186), '1lrh': (36.768, 58.368, 78.221),
                   '1v4s': (25.858, 4.019, 69.703), '1mzc': (18.1982, 132.223, -3.104), '1ke5': (-6.477, 46.352, 41.38),
                   '1of1': (11.046, 19.675, 13.188), '1tow': (20.3671, 3.5534, 2.0902),
                   '1t46': (27.9216, 28.3615, 39.3311), '1ia1': (12.5801, 36.0412, 15.0034),
                   '1w2g': (37.5942, 30.8776, 56.4394), '1gpk': (1.8458, 65.0403, 67.2026),
                   '1r55': (10.991, 16.974, 25.907), '1jla': (1.5244, -19.0316, 21.4829),
                   '2bsm': (32.8436, 8.1721, 22.6205), '1p62': (72.1472, 36.7636, 19.0079),
                   '1sg0': (39.0767, 10.1536, 31.2341), '1uml': (49.7726, 55.1958, 18.6139),
                   '1s19': (11.0235, 22.5336, 34.0915), '1j3j': (29.6907, 6.164, 62.9412),
                   '1sq5': (55.5483, 7.8118, 12.2511), '1n1m': (81.205, 75.956, 96.706),
                   '1x8x': (1.546, 26.897, 19.183), '1jje': (57.6738, 24.3273, 33.1633),
                   '1hnn': (28.606, 44.363, 17.563), '1opk': (46.409, 19.237, 17.91), '1sj0': (32.419, -0.87, 25.371),
                   '1r1h': (27.2287, 39.3254, 33.0035), '1ygc': (11.995, 29.6553, 38.1599),
                   '1r9o': (4.9797, 31.6317, -1.7678), '1k3u': (49.218, 27.464, 12.868),
                   '1meh': (61.0525, 55.866, 17.0589), '1u4d': (23.891, 17.706, 57.196),
                   '2bm2': (47.7025, 104.4093, 86.8505), '1q41': (36.3064, 7.0633, 32.4421),
                   '1xoq': (21.377, 22.518, 98.995), '1y6b': (0.3899, 32.3705, 17.426), '1xm6': (45.253, 1.339, -9.505),
                   '1u1c': (11.0, 136.2597, 45.0586), '1n46': (20.74, 6.968, 2.991),
                   '1g9v': (19.2458, 17.3961, 24.1847), '1hwi': (26.664, -10.776, -9.724),
                   '1unl': (58.2085, 27.9757, 29.8964)
                   }
    ads_correct = {'1tz8': (16.611, 61.712, 34.956), '1z95': (28.032, 2.269, 6.287), '1mmv': (14.051, -0.091, 58.876),
                   '1vcj': (31.757, -9.357, 64.03), '1lpz': (7.195, 7.171, 23.167), '1sqn': (11.717, 25.088, 8.184),
                   '1of6': (31.627, -1.363, 49.76), '1m2z': (30.388, 7.009, 13.31), '1t40': (16.594, -6.626, 14.407),
                   '1q4g': (67.682, 22.285, 191.038), '1nav': (48.672, 18.874, 19.565),
                   '1v0p': (25.514, -0.165, 33.667), '1r58': (18.217, 31.086, 17.108), '1n2j': (32.711, 33.849, 47.383),
                   '1hvy': (69.275, 45.344, 25.398), '1jd0': (-14.355, -6.728, 20.99), '2br1': (17.647, -2.995, 10.281),
                   '1ig3': (24.009, 41.294, 19.453), '1s3v': (-2.712, 27.779, 3.44), '1oq5': (17.019, 6.697, 13.899),
                   '1l7f': (25.918, 17.181, 62.81), '1p2y': (16.378, 12.745, 41.105), '1xoz': (47.391, 35.011, 12.091),
                   '1v48': (73.656, 44.595, 50.087), '1yqy': (10.981, 18.707, 27.432), '1hq2': (-8.483, 7.92, 17.464),
                   '1hww': (31.428, 66.377, 7.71), '1gm8': (14.357, -2.253, 3.739), '1t9b': (-8.704, 51.02, 122.855),
                   '1yvf': (-10.938, 56.096, 50.098), '1pmn': (22.953, 10.918, 31.247),
                   '1hp0': (16.667, 25.552, 12.854), '1yv3': (22.347, 38.371, 37.287),
                   '1gkc': (65.828, 30.705, 117.725), '1tt1': (2.373, 0.858, 26.365), '1n2v': (16.21, 17.416, 20.871),
                   '1owe': (22.617, 15.943, 32.551), '1kzk': (20.015, -1.844, 16.842), '1uou': (-3.788, 1.728, 28.611),
                   '1q1g': (32.174, 24.238, 65.112), '1oyt': (16.829, -12.386, 21.858), '1l2s': (79.95, 5.422, 29.965),
                   '1w1p': (43.092, 75.6, 51.851), '1ywr': (2.733, -1.013, 21.3), '1lrh': (36.652, 58.465, 77.356),
                   '1v4s': (40.08, 15.14, 61.93), '1mzc': (17.163, 133.885, -2.625), '1ke5': (-9.599, 48.403, 37.719),
                   '1of1': (20.066, 21.903, 9.473), '1tow': (20.897, 4.989, 1.598), '1t46': (26.135, 26.102, 40.225),
                   '1ia1': (10.291, 36.225, 18.535), '1w2g': (34.571, 32.123, 59.868), '1gpk': (2.828, 67.446, 63.058),
                   '1r55': (9.365, 13.977, 25.321), '1jla': (-3.044, -35.303, 24.81), '2bsm': (32.284, 8.278, 25.503),
                   '1p62': (68.811, 34.953, 19.393), '1sg0': (26.172, 13.586, 5.288), '1uml': (49.715, 53.604, 19.083),
                   '1s19': (11.577, 23.005, 34.305), '1j3j': (27.994, 5.459, 58.421), '1sq5': (52.244, 5.584, 7.477),
                   '1n1m': (81.586, 74.967, 97.94), '1x8x': (8.602, 28.985, 16.25), '1jje': (57.667, 24.848, 34.64),
                   '1hnn': (28.166, 44.045, 16.239), '1opk': (46.753, 17.649, 17.607), '1sj0': (31.352, -1.443, 25.316),
                   '1r1h': (30.984, 44.351, 34.344), '1ygc': (10.422, 41.485, 32.527), '1r9o': (8.68, 33.282, -1.908),
                   '1k3u': (48.805, 27.336, 12.932), '1meh': (56.249, 55.989, 18.26), '1u4d': (22.863, 14.84, 56.346),
                   '2bm2': (39.533, 112.765, 82.078), '1q41': (39.634, 6.293, 36.259), '1xoq': (22.811, 20.639, 97.608),
                   '1y6b': (0.337, 30.599, 17.581), '1xm6': (46.38, 1.644, -9.918), '1u1c': (12.801, 136.753, 45.941),
                   '1n46': (20.795, 6.685, 2.915), '1g9v': (16.946, 16.752, 41.776), '1hwi': (33.137, -6.583, -10.459),
                   '1unl': (59.578, 28.926, 26.908)
                   }
    ads_p2rank = {'1tz8': (12.4753, 61.4473, 32.9116), '1z95': (28.2802, 1.5515, 6.2741),
                  '1mmv': (11.1586, 4.9407, 55.7485), '1vcj': (31.2361, -10.4096, 64.6233),
                  '1lpz': (8.5964, 7.3553, 22.1782), '1sqn': (11.6418, 25.1938, 8.7089),
                  '1of6': (27.5516, 4.4999, 25.2163), '1m2z': (30.2174, 7.2215, 13.5717),
                  '1t40': (19.8155, -6.4276, 22.717), '1q4g': (68.5305, 34.9847, 175.285),
                  '1nav': (46.3353, 15.4394, 18.8531), '1v0p': (23.2915, 0.6416, 34.8782),
                  '1r58': (17.7749, 31.038, 17.9311), '1n2j': (35.5249, 33.777, 43.7602),
                  '1hvy': (66.2172, 41.8438, 26.0495), '1jd0': (-14.9394, -4.9452, 18.862),
                  '2br1': (13.0224, -4.6943, 14.5086), '1ig3': (9.8133, 65.5429, 12.01),
                  '1s3v': (-6.7089, 33.2316, 5.8665), '1oq5': (16.9559, 4.5564, 12.5321),
                  '1l7f': (24.2958, 19.1208, 64.8242), '1p2y': (13.884, 11.7921, 39.9317),
                  '1xoz': (45.1103, 38.8121, 14.8565), '1v48': (73.6895, 44.9591, 50.826),
                  '1yqy': (11.0902, 19.9745, 15.9122), '1hq2': (-5.6262, 3.6866, 19.402),
                  '1hww': (44.7226, 73.6967, -26.3892), '1gm8': (13.4383, -3.6147, 1.3822),
                  '1t9b': (-5.7049, 47.4366, 117.4533), '1yvf': (-3.1358, 49.6072, 46.7987),
                  '1pmn': (20.9863, 16.1471, 30.1883), '1hp0': (18.2953, 24.4404, 14.9806),
                  '1yv3': (19.9042, 45.8285, 53.6307), '1gkc': (64.8116, 29.1444, 114.6012),
                  '1tt1': (1.237, 0.3443, 27.7982), '1n2v': (14.4138, 16.8411, 18.0775),
                  '1owe': (23.2193, 12.1311, 34.2163), '1kzk': (19.8917, -2.2937, 16.9458),
                  '1uou': (-12.9964, -4.1378, 23.0831), '1q1g': (30.3379, 26.3324, 63.1452),
                  '1oyt': (16.2291, -11.5937, 18.901), '1l2s': (77.1359, 6.1271, 23.8463),
                  '1w1p': (48.3648, 76.7112, 51.2398), '1ywr': (1.3873, -2.6278, 19.9186),
                  '1lrh': (36.1436, 58.7239, 78.4636), '1v4s': (25.7235, 3.835, 73.5198),
                  '1mzc': (18.1982, 132.223, -3.104), '1ke5': (-7.3022, 47.7862, 40.6511),
                  '1of1': (15.5116, 20.9175, 10.4286), '1tow': (20.3671, 3.5534, 2.0902),
                  '1t46': (27.9216, 28.3615, 39.3311), '1ia1': (12.5801, 36.0412, 15.0034),
                  '1w2g': (37.5942, 30.8776, 56.4394), '1gpk': (1.8458, 65.0403, 67.2026),
                  '1r55': (7.2755, 17.2059, 27.6316), '1jla': (1.5244, -19.0316, 21.4829),
                  '2bsm': (32.8436, 8.1721, 22.6205), '1p62': (72.1472, 36.7636, 19.0079),
                  '1sg0': (39.0767, 10.1536, 31.2341), '1uml': (49.7726, 55.1958, 18.6139),
                  '1s19': (11.0235, 22.5336, 34.0915), '1j3j': (29.6907, 6.164, 62.9412),
                  '1sq5': (55.5483, 7.8118, 12.2511), '1n1m': (80.1564, 74.7323, 109.865),
                  '1x8x': (0.966, 28.9174, 18.1476), '1jje': (57.6738, 24.3273, 33.1633),
                  '1hnn': (29.6061, 50.3742, 22.526), '1opk': (30.3669, 15.0242, 12.3605),
                  '1sj0': (32.0088, -1.1976, 24.8927), '1r1h': (27.2287, 39.3254, 33.0035),
                  '1ygc': (30.9799, 29.7398, 49.582), '1r9o': (4.9797, 31.6317, -1.7678),
                  '1k3u': (49.6422, 24.2987, 13.5157), '1meh': (61.0525, 55.866, 17.0589),
                  '1u4d': (23.02, 15.0833, 56.4056), '2bm2': (47.7025, 104.4093, 86.8505),
                  '1q41': (36.3064, 7.0633, 32.4421), '1xoq': (21.2053, 19.8061, 93.8092),
                  '1y6b': (0.3899, 32.3705, 17.426), '1xm6': (51.7462, 2.5333, -8.8269),
                  '1u1c': (11.0, 136.2597, 45.0586), '1n46': (20.7068, 7.1177, 2.7886),
                  '1g9v': (19.2458, 17.3961, 24.1847), '1hwi': (28.2757, -8.7039, -11.0967),
                  '1unl': (58.2085, 27.9757, 29.8964)
                  }
    ads_fpocket={'1tz8-AB': (27.791, 52.625, 30.697), '1z95-A': (27.412, 2.466, 6.332), '1mmv-B': (-3.132, 29.688, 77.74), '1vcj-A': (42.098, -15.243, 45.013), '1lpz-AB': (8.994, 8.609, 25.364), '1sqn-B': (25.857, 18.6, 9.888), '1of6-A': (11.739, -1.375, 30.15), '1m2z-A': (30.384, 7.278, 13.845), '1t40-A': (22.367, -6.794, 28.335), '1q4g-B': (56.576, 33.435, 191.906), '1nav-A': (46.487, 15.835, 18.718), '1v0p-A': (6.53, 9.16, 37.641), '1r58-A': (19.884, 29.987, 17.518), '1n2j-A': (37.08, 26.529, 40.906), '1hvy-D': (56.941, 60.147, 20.998), '1jd0-B': (-2.439, -4.54, 33.196), '2br1-A': (7.976, 9.898, 32.474), '1ig3-AB': (26.728, 63.271, 32.521), '1s3v-A': (11.408, 34.158, 2.596), '1oq5-A': (26.023, -2.914, 6.401), '1l7f-A': (18.879, 23.4, 69.498), '1p2y-A': (13.321, 10.453, 39.655), '1xoz-A': (46.99, 36.424, 14.095), '1v48-A': (73.088, 48.023, 49.399), '1yqy-A': (2.372, 29.742, -15.181), '1hq2-A': (-7.42, 6.479, 18.147), '1hww-A': (48.031, 67.889, -26.167), '1gm8-AB': (4.563, 1.042, -11.225), '1t9b-A': (22.273, 33.003, 140.179), '1yvf-A': (-21.356, 64.868, 54.951), '1pmn-A': (21.898, 16.349, 34.906), '1hp0-A': (17.665, 22.607, 12.231), '1yv3-A': (21.081, 39.297, 35.509), '1gkc-A': (62.912, 29.301, 116.375), '1tt1-A': (2.176, -0.644, 28.938), '1n2v-A': (21.981, 27.933, 32.504), '1owe-A': (18.455, 17.425, 19.679), '1kzk': (5.739, -10.738, 20.881), '1uou-A': (-2.501, 2.055, 26.754), '1q1g-F': (32.959, 14.359, 55.479), '1oyt-HIL': (15.757, -10.899, 20.213), '1l2s-B': (75.586, 6.11, 20.55), '1w1p-B': (45.023, 74.882, 50.628), '1ywr-A': (-9.578, 2.813, 29.315), '1lrh-D': (36.768, 58.368, 78.221), '1v4s-A': (26.88, 10.626, 60.736), '1mzc-AB': (28.916, 118.581, 18.258), '1ke5-A': (7.992, 46.456, 41.531), '1of1-B': (20.664, 22.507, 9.993), '1tow-A': (23.385, 4.231, 1.231), '1t46-A': (26.829, 25.908, 39.361), '1ia1-B': (-5.986, 31.079, 21.877), '1w2g-B': (27.577, 33.611, 48.556), '1gpk-A': (1.437, 63.293, 69.723), '1r55-A': (10.991, 16.974, 25.907), '1jla-A': (-1.948, -32.835, 13.69), '2bsm-A': (33.022, 8.541, 24.458), '1p62-B': (73.909, 41.57, 19.006), '1sg0-AB': (45.433, 33.723, 21.176), '1uml-A': (61.87, 45.991, 37.864), '1s19-A': (11.657, 21.616, 34.039), '1j3j-A': (31.71, 5.247, 64.671), '1sq5-A': (50.709, -2.51, 20.907), '1n1m-A': (74.602, 79.489, 118.381), '1x8x-A': (8.684, 19.629, 8.796), '1jje-A': (35.046, 41.354, 29.446), '1hnn-A': (28.606, 44.363, 17.563), '1opk-A': (31.07, 9.882, 5.57), '1sj0-A': (19.474, -0.846, 24.214), '1r1h-A': (32.104, 43.563, 34.889), '1ygc-HL': (10.063, 40.294, 36.356), '1r9o-A': (22.467, 18.737, 4.709), '1k3u-A': (49.218, 27.464, 12.868), '1meh-A': (62.865, 54.707, 16.826), '1u4d-A': (23.891, 17.706, 57.196), '2bm2-B': (44.386, 127.962, 85.341), '1q41-A': (32.059, -9.844, 35.135), '1xoq-B': (1.534, 35.763, 82.073), '1y6b-A': (1.427, 39.52, 43.342), '1xm6-A': (45.253, 1.339, -9.505), '1u1c-F': (9.912, 137.103, 41.175), '1n46-A': (20.74, 6.968, 2.991), '1g9v-AB': (20.008, 17.872, 26.437), '1hwi-AB': (26.664, -10.776, -9.724), '1unl-AD': (37.979, -5.463, 38.61)}
    ads_pocket_coordinates_cobdock_2 = {'1s19-A': (11.657, 21.616, 34.039), '1hww-A': (31.202, 67.22, 7.238),
                                        '1xoq-B': (21.377, 22.518, 98.995), '1gpk-A': (3.762, 67.887, 63.572),
                                        '1ke5-A': (-6.477, 46.352, 41.38), '1n46-A': (20.75, 7.051, 2.83),
                                        '1l2s-B': (75.586, 6.11, 20.55), '1k3u-A': (49.218, 27.464, 12.868),
                                        '1jje-A': (56.908, 25.143, 32.852), '1yv3-A': (21.081, 39.297, 35.509),
                                        '1sg0-AB': (33.188, 15.448, 32.39), '1kzk': (19.723, -1.863, 18.034),
                                        '1yvf-A': (13.037, 48.422, 33.161), '1vcj-A': (42.098, -15.243, 45.013),
                                        '1unl-AD': (59.114, 27.583, 28.451), '1hvy-D': (64.212, 40.454, 25.852),
                                        '1owe-A': (21.576, 17.9, 34.172), '1w1p-B': (45.023, 74.882, 50.628),
                                        '1hnn-A': (30.424, 54.103, 24.874), '1of6-A': (27.563, 5.147, 31.695),
                                        '1x8x-A': (5.832, 29.34, 17.507), '1w2g-B': (34.485, 32.531, 59.616),
                                        '1z95-A': (27.412, 2.466, 6.332), '1r58-A': (19.884, 29.987, 17.518),
                                        '1s3v-A': (-6.035, 30.201, 4.554), '1sq5-A': (50.79, 8.045, 7.642),
                                        '1v0p-A': (25.462, -1.018, 33.558), '1hq2-A': (-7.42, 6.479, 18.147),
                                        '1t46-A': (26.829, 25.908, 39.361), '1xm6-A': (45.253, 1.339, -9.505),
                                        '1y6b-A': (2.848, 30.078, 16.051), '1of1-B': (20.664, 22.507, 9.993),
                                        '1oq5-A': (16.319, 5.326, 16.694), '1mmv-B': (9.888, 4.186, 55.498),
                                        '1v4s-A': (39.806, 15.18, 61.877), '1n2j-A': (37.351, 33.921, 45.884),
                                        '1oyt-HIL': (15.757, -10.899, 20.213), '1n2v-A': (15.88, 16.254, 20.662),
                                        '1q4g-B': (67.844, 22.645, 190.094), '1xoz-A': (46.99, 36.424, 14.095),
                                        '2br1-A': (14.002, -2.482, 11.747), '1g9v-AB': (20.008, 17.872, 26.437),
                                        '1uml-A': (49.1, 53.149, 18.372), '1meh-A': (62.981, 54.593, 16.867),
                                        '1tz8-AB': (13.814, 61.435, 33.555), '1lpz-AB': (9.131, 8.425, 25.508),
                                        '1q41-A': (38.492, 6.747, 33.848), '1yqy-A': (12.356, 17.965, 28.458),
                                        '1jla-A': (-2.555, -34.769, 24.814), '1pmn-A': (21.898, 16.349, 34.906),
                                        '2bm2-B': (43.95, 108.284, 80.269), '1ia1-B': (10.483, 35.911, 19.356),
                                        '1ygc-HL': (11.409, 40.472, 34.227), '1lrh-D': (36.768, 58.368, 78.221),
                                        '1r1h-A': (32.104, 43.563, 34.889), '1opk-A': (46.409, 19.237, 17.91),
                                        '1u1c-F': (9.912, 137.103, 41.175), '1sj0-A': (32.419, -0.87, 25.371),
                                        '1t40-A': (16.5, -5.75, 14.912), '1tt1-A': (1.984, -0.498, 28.397),
                                        '2bsm-A': (33.022, 8.541, 24.458), '1ywr-A': (3.014, -5.954, 16.778),
                                        '1jd0-B': (-5.197, -1.995, 9.709), '1mzc-AB': (12.255, 130.539, -5.501),
                                        '1p62-B': (73.909, 41.57, 19.006), '1nav-A': (46.487, 15.835, 18.718),
                                        '1u4d-A': (23.757, 17.588, 57.436), '1ig3-AB': (7.031, 64.958, 12.869),
                                        '1v48-A': (73.088, 48.023, 49.399), '1t9b-A': (22.273, 33.003, 140.179),
                                        '1tow-A': (23.385, 4.231, 1.231), '1p2y-A': (13.321, 10.453, 39.655),
                                        '1hwi-AB': (26.588, -10.832, -9.64), '1j3j-A': (31.71, 5.247, 64.671),
                                        '1l7f-A': (31.097, 19.015, 61.245), '1hp0-A': (17.665, 22.607, 12.231),
                                        '1r55-A': (10.991, 16.974, 25.907), '1m2z-A': (30.384, 7.278, 13.845),
                                        '1sqn-B': (11.82, 24.632, 8.294), '1n1m-A': (81.205, 75.956, 96.706),
                                        '1gkc-A': (61.698, 29.804, 117.659), '1uou-A': (-12.882, -4.431, 23.487),
                                        '1q1g-F': (30.197, 26.872, 64.318), '1r9o-A': (5.495, 28.038, -1.026),
                                        '1gm8-AB': (16.916, 0.781, 3.192)
                                        }
    ads_all = {'1s19-A': (11.657, 21.616, 34.039), '1hww-A': (31.202, 67.22, 7.238), '1xoq-B': (18.377, 18.778, 90.328),
               '1gpk-A': (3.762, 67.887, 63.572), '1ke5-A': (-6.477, 46.352, 41.38), '1n46-A': (20.75, 7.051, 2.83),
               '1l2s-B': (75.586, 6.11, 20.55), '1k3u-A': (49.218, 27.464, 12.868), '1jje-A': (56.908, 25.143, 32.852),
               '1yv3-A': (21.081, 39.297, 35.509), '1sg0-AB': (33.188, 15.448, 32.39), '1kzk': (19.723, -1.863, 18.034),
               '1yvf-A': (13.037, 48.422, 33.161), '1vcj-A': (42.098, -15.243, 45.013),
               '1unl-AD': (44.735, 19.435, 50.062), '1hvy-D': (64.212, 40.454, 25.852),
               '1owe-A': (21.576, 17.9, 34.172), '1w1p-B': (45.023, 74.882, 50.628), '1hnn-A': (30.424, 54.103, 24.874),
               '1of6-A': (27.563, 5.147, 31.695), '1x8x-A': (5.832, 29.34, 17.507), '1w2g-B': (27.577, 33.611, 48.556),
               '1z95-A': (27.412, 2.466, 6.332), '1r58-A': (19.884, 29.987, 17.518), '1s3v-A': (-6.035, 30.201, 4.554),
               '1sq5-A': (50.79, 8.045, 7.642), '1v0p-A': (25.462, -1.018, 33.558), '1hq2-A': (-7.42, 6.479, 18.147),
               '1t46-A': (26.829, 25.908, 39.361), '1xm6-A': (45.253, 1.339, -9.505), '1y6b-A': (2.848, 30.078, 16.051),
               '1of1-B': (20.664, 22.507, 9.993), '1oq5-A': (16.319, 5.326, 16.694), '1mmv-B': (9.888, 4.186, 55.498),
               '1v4s-A': (25.858, 4.019, 69.703), '1n2j-A': (37.351, 33.921, 45.884),
               '1oyt-HIL': (15.757, -10.899, 20.213), '1n2v-A': (15.88, 16.254, 20.662),
               '1q4g-B': (67.844, 22.645, 190.094), '1xoz-A': (46.99, 36.424, 14.095),
               '2br1-A': (14.002, -2.482, 11.747), '1g9v-AB': (20.008, 17.872, 26.437),
               '1uml-A': (49.1, 53.149, 18.372), '1meh-A': (62.981, 54.593, 16.867),
               '1tz8-AB': (13.814, 61.435, 33.555), '1lpz-AB': (9.131, 8.425, 25.508),
               '1q41-A': (38.492, 6.747, 33.848), '1yqy-A': (12.356, 17.965, 28.458),
               '1jla-A': (-2.555, -34.769, 24.814), '1pmn-A': (21.898, 16.349, 34.906),
               '2bm2-B': (48.709, 100.315, 85.834), '1ia1-B': (10.483, 35.911, 19.356),
               '1ygc-HL': (11.409, 40.472, 34.227), '1lrh-D': (36.768, 58.368, 78.221),
               '1r1h-A': (32.104, 43.563, 34.889), '1opk-A': (46.409, 19.237, 17.91),
               '1u1c-F': (9.912, 137.103, 41.175), '1sj0-A': (32.419, -0.87, 25.371), '1t40-A': (16.5, -5.75, 14.912),
               '1tt1-A': (1.984, -0.498, 28.397), '2bsm-A': (33.022, 8.541, 24.458), '1ywr-A': (3.014, -5.954, 16.778),
               '1jd0-B': (-9.566, -12.5, 36.307), '1mzc-AB': (12.255, 130.539, -5.501),
               '1p62-B': (73.909, 41.57, 19.006), '1nav-A': (46.487, 15.835, 18.718),
               '1u4d-A': (23.757, 17.588, 57.436), '1ig3-AB': (25.026, 45.244, 17.438),
               '1v48-A': (73.088, 48.023, 49.399), '1t9b-A': (22.273, 33.003, 140.179),
               '1tow-A': (23.385, 4.231, 1.231), '1p2y-A': (13.321, 10.453, 39.655),
               '1hwi-AB': (26.588, -10.832, -9.64), '1j3j-A': (31.71, 5.247, 64.671),
               '1l7f-A': (31.097, 19.015, 61.245), '1hp0-A': (17.665, 22.607, 12.231),
               '1r55-A': (10.991, 16.974, 25.907), '1m2z-A': (30.384, 7.278, 13.845), '1sqn-B': (11.82, 24.632, 8.294),
               '1n1m-A': (74.602, 79.489, 118.381), '1gkc-A': (61.698, 29.804, 117.659),
               '1uou-A': (-2.501, 2.055, 26.754), '1q1g-F': (30.197, 26.872, 64.318), '1r9o-A': (5.495, 28.038, -1.026),
               '1gm8-AB': (16.916, 0.781, 3.192)}
    ads_multimodel = {'1s19-A': (11.657, 21.616, 34.039), '1hww-A': (31.202, 67.22, 7.238),
                      '1xoq-B': (21.377, 22.518, 98.995), '1gpk-A': (3.762, 67.887, 63.572),
                      '1ke5-A': (-6.477, 46.352, 41.38), '1n46-A': (20.75, 7.051, 2.83),
                      '1l2s-B': (75.586, 6.11, 20.55), '1k3u-A': (49.218, 27.464, 12.868),
                      '1jje-A': (56.908, 25.143, 32.852), '1yv3-A': (21.081, 39.297, 35.509),
                      '1sg0-AB': (33.188, 15.448, 32.39), '1kzk': (19.723, -1.863, 18.034),
                      '1yvf-A': (-20.698, 65.605, 69.878), '1vcj-A': (42.098, -15.243, 45.013),
                      '1unl-AD': (59.114, 27.583, 28.451), '1hvy-D': (64.212, 40.454, 25.852),
                      '1owe-A': (21.576, 17.9, 34.172), '1w1p-B': (46.584, 70.75, 59.454),
                      '1hnn-A': (30.424, 54.103, 24.874), '1of6-A': (27.563, 5.147, 31.695),
                      '1x8x-A': (5.832, 29.34, 17.507), '1w2g-B': (34.485, 32.531, 59.616),
                      '1z95-A': (27.412, 2.466, 6.332), '1r58-A': (19.884, 29.987, 17.518),
                      '1s3v-A': (-6.035, 30.201, 4.554), '1sq5-A': (50.79, 8.045, 7.642),
                      '1v0p-A': (25.462, -1.018, 33.558), '1hq2-A': (-7.42, 6.479, 18.147),
                      '1t46-A': (26.829, 25.908, 39.361), '1xm6-A': (45.253, 1.339, -9.505),
                      '1y6b-A': (2.848, 30.078, 16.051), '1of1-B': (20.664, 22.507, 9.993),
                      '1oq5-A': (16.319, 5.326, 16.694), '1mmv-B': (9.888, 4.186, 55.498),
                      '1v4s-A': (39.806, 15.18, 61.877), '1n2j-A': (37.351, 33.921, 45.884),
                      '1oyt-HIL': (15.757, -10.899, 20.213), '1n2v-A': (15.88, 16.254, 20.662),
                      '1q4g-B': (67.844, 22.645, 190.094), '1xoz-A': (46.99, 36.424, 14.095),
                      '2br1-A': (14.002, -2.482, 11.747), '1g9v-AB': (20.008, 17.872, 26.437),
                      '1uml-A': (49.1, 53.149, 18.372), '1meh-A': (62.981, 54.593, 16.867),
                      '1tz8-AB': (13.814, 61.435, 33.555), '1lpz-AB': (9.131, 8.425, 25.508),
                      '1q41-A': (38.492, 6.747, 33.848), '1yqy-A': (12.356, 17.965, 28.458),
                      '1jla-A': (-2.555, -34.769, 24.814), '1pmn-A': (21.898, 16.349, 34.906),
                      '2bm2-B': (44.386, 127.962, 85.341), '1ia1-B': (10.483, 35.911, 19.356),
                      '1ygc-HL': (11.409, 40.472, 34.227), '1lrh-D': (36.768, 58.368, 78.221),
                      '1r1h-A': (32.104, 43.563, 34.889), '1opk-A': (46.409, 19.237, 17.91),
                      '1u1c-F': (9.912, 137.103, 41.175), '1sj0-A': (32.419, -0.87, 25.371),
                      '1t40-A': (16.5, -5.75, 14.912), '1tt1-A': (1.984, -0.498, 28.397),
                      '2bsm-A': (33.022, 8.541, 24.458), '1ywr-A': (3.014, -5.954, 16.778),
                      '1jd0-B': (-5.197, -1.995, 9.709), '1mzc-AB': (12.255, 130.539, -5.501),
                      '1p62-B': (73.909, 41.57, 19.006), '1nav-A': (46.487, 15.835, 18.718),
                      '1u4d-A': (23.757, 17.588, 57.436), '1ig3-AB': (7.031, 64.958, 12.869),
                      '1v48-A': (73.088, 48.023, 49.399), '1t9b-A': (22.273, 33.003, 140.179),
                      '1tow-A': (23.385, 4.231, 1.231), '1p2y-A': (13.321, 10.453, 39.655),
                      '1hwi-AB': (26.588, -10.832, -9.64), '1j3j-A': (31.71, 5.247, 64.671),
                      '1l7f-A': (31.097, 19.015, 61.245), '1hp0-A': (17.665, 22.607, 12.231),
                      '1r55-A': (10.991, 16.974, 25.907), '1m2z-A': (30.384, 7.278, 13.845),
                      '1sqn-B': (11.82, 24.632, 8.294), '1n1m-A': (81.205, 75.956, 96.706),
                      '1gkc-A': (61.698, 29.804, 117.659), '1uou-A': (-12.882, -4.431, 23.487),
                      '1q1g-F': (30.197, 26.872, 64.318), '1r9o-A': (5.495, 28.038, -1.026),
                      '1gm8-AB': (16.916, 0.781, 3.192)}
    for i in range(1, 3):
        folder_path = f"{current_dir}/pose/ads_fpocket_{i}"  # Define the folder name
        os.makedirs(folder_path, exist_ok=True)  # Create only if it doesn't exist
        bulk_run(protein_list=ads_test,
                 input_path="/home/yavuz/yavuz_proje/cobdock_2/local_docking/data/ads",
                 coordinate_dictionary=ads_all,
                 size=15,
                 label_dic=f"ads_all_{i}"
                 )
local_docking_ads()
